version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: employee-api
    ports:
      - "4000:4000"
    env_file:
      - .env
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - employee-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:6
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - employee-network
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD}
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD}
      - ME_CONFIG_SITE_BASEURL=/mongo-express
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - employee-network
    restart: unless-stopped
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:8081 || exit 1
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  employee-network:
    driver: bridge
    name: employee-network

volumes:
  mongodb_data:
    name: employee-mongodb-data
